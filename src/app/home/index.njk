{% extends "base-template.njk" %}

{% import "common/templates/includes/macros.njk" as m %}

{% block pageTitle %}
	GAR | Dashboard
{% endblock %}

{% set active = '/home' %}

{% block header %}
  {% include "header-user.njk" %}
{% endblock %}

{% block beforeContent %}
  {% include "phase.njk" %}
{% endblock %}

{% block content %}

  {% if errors %}
    {% include "common/templates/includes/errors.njk" %}
  {% endif %}

  {% if successMsg %}
    {% include "common/templates/includes/success-action.njk" %}
  {% endif %}

  {# <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <hr class="govuk-section-break govuk-section-break--visible govuk-section-break--xl govuk-!-margin-top-0">
    </div>
  </div> #}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <h1 class="govuk-heading-l">{{__('title')}}</h1>
      <p class="govuk-body-m">{{__('create_gar_caption_1')}}
        <a href="https://assets.publishing.service.gov.uk/media/660fba8263b7f8001fde18e2/GAR_Template_Apr_2024_v6.6_SDS_.xlsx">
          <span class="govuk-visually-hidden">{{__('heading_create_gar')}}
          </span>{{__('create_gar_caption_link')}}</a>{{__('create_gar_caption_2')}}</p>
      <div class="margin-bottom-40"><a id="start_now" class="govuk-button" href="/garfile/home">Create a GAR</a></div>
    </div>
  </div>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <hr class="govuk-section-break govuk-section-break--visible govuk-section-break--xl govuk-!-margin-top-0">
    </div>
  </div>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {# <form id="signform2" action="/garfile/view" method="post" role="form"> #}
      <h1 class="govuk-heading-l">{{__('heading_manage_gars')}}</h1>
      <p class="govuk-body-m">{{__('manage_gars_caption')}}</p>
      <div class="padding-bottom-10"> 
        <div class="govuk-inset-text">Your draft, submitted and cancelled GARs will only be saved for 6 months, after this they will be deleted.</div>
        {% if serverPagination.totalPages>1 %}
        <div class="govuk-inset-text">
          You are viewing {{serverPagination.perPage * (serverPagination.page-1) +1}} - {{serverPagination.totalItems if serverPagination.page == serverPagination.totalPages else serverPagination.perPage * serverPagination.page}}  of your most recent GARs, there are {{serverPagination.totalItems}} total GARs. 
          {% if serverPagination.page>1 %}
          <br/>To view the previous {{serverPagination.perPage}} GARs <a href="?page={{serverPagination.page-1}}">click here</a>.
          {% endif %}
          {% if serverPagination.page<serverPagination.totalPages %}
          <br/>To view the next {{serverPagination.totalItems % serverPagination.perPage if serverPagination.page == serverPagination.totalPages-1 else serverPagination.perPage}} GARs <a href="?page={{serverPagination.page+1}}">click here</a>.
          {% endif %}
        </div>
        {% endif %}
      </div>
    </div>

    <script>
      var currentPage = 1;
      var totalResults = 1;
      var maxPages = 1;
      var paginationState = {};
      function initialisePagination(paginationName, totalResults, maxPages, pageSize){

        var elements = {};

        elements.previousButton = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__previous_button');
        elements.nextButton = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__next_button');
        elements.firstNumber = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__first_number');
        elements.firstEllipses = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__first_ellipses');
        elements.lastNumber = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__last_number');
        elements.lastEllipses = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__last_ellipses');
        elements.previousNumber = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__previous_number');
        elements.previousNumberLink = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__previous_number .pagination__link');
        elements.currentNumber = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__current_number');
        elements.currentNumberLink = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__current_number .pagination__link');
        elements.nextNumber = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__next_number');
        elements.nextNumberLink = document.querySelector('.pagination__' + paginationName + '_paginator .pagination__next_number .pagination__link');
        elements.fromNumber = document.querySelector('.pagination__' + paginationName + '_paginator #pagination__from_number');
        elements.toNumber = document.querySelector('.pagination__' + paginationName + '_paginator #pagination__to_number');

        this.paginationState[paginationName] = {
          currentPage: 1,
          totalResults: totalResults,
          maxPages: maxPages,
          pageSize: pageSize,
          elements: elements
        }
        
        if(maxPages<=1){
          hideElement(document.querySelector('.pagination__' + paginationName + '_paginator'));
        }
      }

      function goToPage(paginationName, page){

        var paginationData = this.paginationState[paginationName];

        if(page > 0){
          paginationData.currentPage = page;
        }
        document.querySelectorAll('.pagination__table_'+paginationName+' .pagination-page').forEach(el=>hideElement(el));
        document.querySelectorAll('.pagination__table_'+paginationName+' .pagination-page.pagination-page_'+paginationData.currentPage).forEach(el=>showElement(el));

        if(paginationData.currentPage===1){
          hideElement(paginationData.elements.previousButton);
          hideElement(paginationData.elements.firstNumber);
        }else{
          showElement(paginationData.elements.previousButton);
          showElement(paginationData.elements.firstNumber);
        }

        if(paginationData.currentPage<=2){
          hideElement(paginationData.elements.previousNumber);
        }else{
          showElement(paginationData.elements.previousNumber);
        }

        if(paginationData.currentPage>3){
          showElement(paginationData.elements.firstEllipses);
        }else{
          hideElement(paginationData.elements.firstEllipses);
        }

        if(paginationData.currentPage>paginationData.maxPages-3){
          hideElement(paginationData.elements.lastEllipses);
        }else{
          showElement(paginationData.elements.lastEllipses);
        }

        if(paginationData.currentPage>paginationData.maxPages-2){
          hideElement(paginationData.elements.lastNumber);
        }else{
          showElement(paginationData.elements.lastNumber);
        }

        if(paginationData.currentPage>paginationData.maxPages-1){
          hideElement(paginationData.elements.nextNumber);
        }else{
          showElement(paginationData.elements.nextNumber);
        }

        if(paginationData.currentPage===paginationData.maxPages){
          hideElement(paginationData.elements.nextButton);
        }else{
          showElement(paginationData.elements.nextButton);
        }

        paginationData.elements.previousNumberLink.textContent = paginationData.currentPage-1;
        paginationData.elements.previousNumberLink.ariaLabel = "Page " + paginationData.currentPage-1;
        paginationData.elements.currentNumberLink.textContent = paginationData.currentPage;
        paginationData.elements.currentNumberLink.ariaLabel = "Page " + paginationData.currentPage + ", current page";
        paginationData.elements.nextNumberLink.textContent = paginationData.currentPage+1;
        paginationData.elements.nextNumberLink.ariaLabel = "Page " + paginationData.currentPage+1;

        paginationData.elements.fromNumber.textContent = ((paginationData.currentPage-1)*paginationData.pageSize)+1;
        paginationData.elements.toNumber.textContent = Math.min(paginationData.totalResults, paginationData.currentPage*paginationData.pageSize);

      }

      function goToNextPage(paginationName){
        goToPage(paginationName, this.paginationState[paginationName].currentPage + 1);
      }
      function goToPreviousPage(paginationName){
        goToPage(paginationName, this.paginationState[paginationName].currentPage - 1);
      }


      //TODO see if there is a better way to hide and show elements
      function hideElement(element){
        element.setAttribute("hidden", true);
        element.style.display="none";
      }

      function showElement(element){
        element.removeAttribute("hidden");
        element.style.display="";
      }
    </script>

    {% macro paginator(name, pageSize, totalItems) %}
      {% set maxPage = (totalItems // pageSize)+1 if totalItems % pageSize else totalItems // pageSize %}
      <nav class="govuk-pagination pagination__{{name}}_paginator" role="navigation" aria-label="Pagination">
        <div class="pagination__summary">Showing <span id="pagination__from_number">1</span> &ndash; <span id="pagination__to_number">{{pageSize if totalItems > pageSize else totalItems}} </span> of {{totalItems}} results</div>
        <ul class="pagination">
          <li class="govuk-pagination__item pagination__previous_button" hidden="true"><a class="pagination__link" onClick="goToPreviousPage('{{name}}')" aria-label="Previous page" hidden="true"><span aria-hidden="true" role="presentation">&laquo;</span> Previous</a></li>
          <li class="govuk-pagination__item pagination__first_number" hidden="true"><a class="pagination__link" onClick="goToPage('{{name}}',1)" aria-label="Page 1">1</a></li>
          <li class="govuk-pagination__item pagination__first_ellipses">⋯</li>
          <li class="govuk-pagination__item pagination__previous_number"><a class="pagination__link" onClick="goToPreviousPage('{{name}}')" aria-label="Page 2">2</a></li>
          <li class="govuk-pagination__item pagination__current_number"><a class="pagination__link current" aria-current="true" aria-label="Page 3, current page">3</a></li>
          <li class="govuk-pagination__item pagination__next_number"><a class="pagination__link" onClick="goToNextPage('{{name}}')" aria-label="Page 4">4</a></li>
          <li class="govuk-pagination__item pagination__last_ellipses">⋯</li>
          <li class="govuk-pagination__item pagination__last_number"><a class="pagination__link" onClick="goToPage('{{name}}',{{maxPage}})" aria-label="Page {{maxPage}}">{{maxPage}}</a></li>
          <li class="govuk-pagination__item pagination__next_button"><a class="pagination__link" onClick="goToNextPage('{{name}}')" aria-label="Next page">Next <span aria-hidden="true" role="presentation">&raquo;</span></a></li>
        </ul>
      </nav> 

      <script>
        initialisePagination('{{name}}', {{totalItems}}, {{maxPage}}, {{pageSize}});
        goToPage('{{name}}', 1);
      </script>
   {% endmacro %}

    <div class="govuk-grid-column-full">
      <div class="govuk-tabs" data-module="tabs">
        <ul class="govuk-tabs__list">
          <li class="govuk-tabs__list-item">
            <a class="govuk-tabs__tab govuk-tabs__tab--selected" href="#gars-draft">
              {{__('tab_gar_draft', draftGars.length)}}
            </a>
          </li>
          <li class="govuk-tabs__list-item">
            <a class="govuk-tabs__tab govuk-tabs__tab--selected" href="#gars-submitted">
              {{__('tab_gar_submitted', submittedGars.length)}}
            </a>
          </li>
          <li class="govuk-tabs__list-item">
            <a class="govuk-tabs__tab govuk-tabs__tab--selected" href="#gars-cancelled">
              {{__('tab_gar_cancelled', cancelledGars.length)}}
            </a>
          </li>
        </ul>
        <form id="signform2" action="/garfile/view" method="post" role="form">
          {% macro gar_summary_table(name, gars) %}
            {% set maxPage = (gars.length // pageSize)+1 if gars.length % pageSize else gars.length // pageSize %}
            <section class="govuk-tabs__panel" id="gars-{{ name }}">
              <h2 class="govuk-heading-m">{{ name | capitalize }} GARs</h2>
              <table class="govuk-table" id="sortGAR">
                <thead class="govuk-table__head" >
                  <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col">{{__('field_aircraft_registration')}}</th>
                    <th class="govuk-table__header" scope="col" width="150">{{__('field_created_date')}}</th>
                    <th class="govuk-table__header" scope="col" width="150">{{__('field_departure_date')}}</th>
                    <th class="govuk-table__header" scope="col">{{__('field_departure_time')}}</th>
                    <th class="govuk-table__header" scope="col">{{__('field_departure_port')}}</th>
                    <th class="govuk-table__header" scope="col">{{__('field_arrival_port')}}</th>
                    <th class="govuk-table__header" scope="col"></th>
                    <th class="govuk-table__header" scope="col">{{__('field_submission_reference')}}</th>
                  </tr>
                </thead>
                <tbody class="govuk-table__body pagination__table_{{name}}">
                  {% if gars | length %}
                    {% for gar in gars %}
                      {% set page = ((loop.index-1) // pageSize) + 1 %}
                      <tr class="govuk-table__row {{ 'hidden' if page!=1}} pagination-page pagination-page_{{page}}" id="pagination-row-{{page}}-{{ loop.index }}">
                        <td class="govuk-table__cell">
                          {% if gar.registration === null %}
                            <button id="view-{{ name }}-{{ loop.index }}" class="govuk-link btn-link" name="garId" value="{{ gar.garId }}">{{__('value_aircraft_registration_null')}}</button>
                          {% else %}
                            <button id="view-{{ name }}-{{ loop.index }}" class="govuk-link btn-link" name="garId" value="{{ gar.garId }}">{{ gar.registration }}</button>
                          {% endif %}
                        </td>
                        <td class="govuk-table__cell">{{ gar.createdDate | truncate(11, true, "") }}</td>
                        <td class="govuk-table__cell">{{ gar.departureDate }}</td>
                        <td class="govuk-table__cell">{{ gar.departureTime }}</td>
                        <td class="govuk-table__cell">{{gar.departurePort | upper }}</td>
                        <td class="govuk-table__cell">{{gar.arrivalPort | upper }}</td>
                        <td class="govuk-table__cell"></td>
                        <td id="garid-{{ name }}-{{ loop.index }}" class="govuk-table__cell" >
                          <small>
                            <code>{{m.gar_id_screen_reader(gar.cbp_id) if gar.cbp_id else ('Processing...' if gar.status.name == 'Submitted') }}</code>
                          </small>
                        </td>
                      </tr>
                    {% endfor %}
                  {% else %}
                    {{ m.empty_table_message(__('gar_' + name + '_no_records')) }}
                  {% endif %}
                </tbody>
              </table>
              <script>
                $(document).on("click", "table thead tr th:not(.no-sort)", function () {
                  var table = $(this).parents("table");
                  var rows = $(this)
                    .parents("table")
                    .find("tbody tr")
                    .toArray()
                    .sort(TableComparer($(this).index()));
                  var dir = ($(this).hasClass("sort-asc"))
                    ? "desc"
                    : "asc";

                  if (dir == "desc") {
                    rows = rows.reverse();
                  }

                  for (var i = 0; i < rows.length; i++) {
                    table.append(rows[i]);
                  }

                  table
                    .find("thead tr th")
                    .removeClass("sort-asc")
                    .removeClass("sort-desc");
                  $(this)
                    .removeClass("sort-asc")
                    .removeClass("sort-desc")
                    .addClass("sort-" + dir);
                });

                function TableComparer(index) {
                  return function (a, b) {
                    var val_a = TableCellValue(a, index);
                    var val_b = TableCellValue(b, index);
                    var result = ($.isNumeric(val_a) && $.isNumeric(val_b))
                      ? val_a - val_b
                      : val_a
                        .toString()
                        .localeCompare(val_b);

                    return result;
                  }
                }

                function TableCellValue(row, index) {
                  return $(row)
                    .children("td")
                    .eq(index)
                    .text();
                }
              </script>

              {{ paginator(name, pageSize, gars.length) }}
              
            </section>
          {% endmacro %}
          {{ gar_summary_table('draft', draftGars) }}
          {{ gar_summary_table('submitted', submittedGars) }}
          {{ gar_summary_table('cancelled', cancelledGars) }}
        </div>
        <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
      </div>
    </div>

  {% endblock %}