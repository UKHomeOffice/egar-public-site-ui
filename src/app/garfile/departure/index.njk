{% extends "base-template.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% import "common/templates/includes/macros.njk" as m %}
{% import "common/templates/includes/banners.njk" as b %}

{% block pageTitle %}
  {{__('error_prefix') if errors}} Create GAR | Departure | {{__('title')}}
{% endblock %}

{% set active = '/home' %}

{% block header %}
  {% include "header-user.njk" %}
{% endblock %}

{% block beforeContent %}
  {% include "phase.njk" %}
  <a href="/garfile/home" class="govuk-back-link">{{__('nav_back')}}</a>
{% endblock %}

{% block content %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {% if errors %}
        {% include "common/templates/includes/errors.njk" %}
      {% endif %}

      <form id="page-form" action="/garfile/departure" autocomplete="off" class="form-group" method="post">
        <span class="govuk-caption-xl">{{__('section_count', 1, 9)}}</span>
        <h1 class="govuk-heading-xl">{{__('heading_departure_details')}}</h1>
        <p class="govuk-body-l">{{__('departure_details_caption')}}</p>

        {# Start departure date #}
        <div id="departureDate" class="govuk-form-group {{ m.form_group_class('departureDate', errors) }}">
          <fieldset class="govuk-fieldset" aria-describedby="departureDate-hint" role="group">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
              <h2 class="govuk-fieldset__heading">
                {{__('field_departure_date')}}
              </h2>
            </legend>
            <span id="departureDate-hint" class="govuk-hint">{{__('field_date_hint')}}</span>
            {{ m.error_message('departureDate', errors, __) }}
            <div class="govuk-date-input" id="departure">
              <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                  <label class="govuk-label govuk-date-input__label" for="departureDay">
                    <span class="govuk-visually-hidden">{{__('field_departure_hint')}}</span>{{__('field_day')}}
                  </label>
                  <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureDay"
                name="departureDay" type="text" maxLength=2
                value="{{ cookie.dateSlice('day', cookie.getGarDepartureVoyage().departureDate) }}"
                {{ 'aria-describedby=departureDate-error' if errors | containsError('departureDate') }}>
                </div>
              </div>

              <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                  <label class="govuk-label govuk-date-input__label" for="departureMonth">
                    <span class="govuk-visually-hidden">{{__('field_departure_hint')}}</span>{{__('field_month')}}
                  </label>
                  <span id="departure-month-hint" class="govuk-visually-hidden">{{__('field_month_hint')}}</span>
                  <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureMonth"
                    name="departureMonth" type="text" maxLength=2
                    value="{{ cookie.dateSlice('month', cookie.getGarDepartureVoyage().departureDate) }}"
                    aria-describedby="{{ 'departureDate-error ' if errors | containsError('departureDate') }}departure-month-hint">
                </div>
              </div>

              <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                  <label class="govuk-label govuk-date-input__label" for="departureYear">
                    <span class="govuk-visually-hidden">{{__('field_departure_hint')}}</span>{{__('field_year')}}
                  </label>
                  <input class="govuk-input govuk-date-input__input govuk-input--width-4" id="departureYear"
                    name="departureYear" type="text" maxLength=4
                    value="{{ cookie.dateSlice('year', cookie.getGarDepartureVoyage().departureDate) }}"
                    {{ 'aria-describedby=departureDate-error' if errors | containsError('departureDate') }}>
                </div>
              </div>
            </div>
          </fieldset>
        </div>
        {# End departure date #}

        {# Start departure time #}
        <div class="govuk-form-group {{ m.form_group_class('departureTime', errors) }}" id="departureTime">
          <fieldset class="govuk-fieldset" aria-describedby="departureTime-hint" role="group">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
              <h2 class="govuk-fieldset__heading">
                {{__('field_departure_time')}}
              </h2>
            </legend>
            <span id="departureTime-hint" class="govuk-hint">{{__('field_time_hint')}}</span>
            {{ m.error_message('departureTime', errors, __) }}

            <div class="govuk-date-input" id="departureTime">
              <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                  <label class="govuk-label govuk-date-input__label" for="departureHour">
                    <span class="govuk-visually-hidden">{{__('field_departure_hint')}}</span>{{__('field_hour')}}
                  </label>
                  <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureHour"
                    name="departureHour" type="text" maxLength=2
                    value="{{ cookie.timeSlice('hour', cookie.getGarDepartureVoyage().departureTime) }}"
                    {{ 'aria-describedby=departureTime-error' if errors | containsError('departureTime') }}>
                </div>
              </div>

              <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                  <label class="govuk-label govuk-date-input__label" for="departureMinute">
                    <span class="govuk-visually-hidden">{{__('field_departure_hint')}}</span>{{__('field_minute')}}
                  </label>
                  <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureMinute"
                    name="departureMinute"  type="text" maxLength=2
                    value="{{ cookie.timeSlice('minute', cookie.getGarDepartureVoyage().departureTime) }}"
                    {{ 'aria-describedby=departureTime-error' if errors | containsError('departureTime') }}>
                </div>
              </div>
            </div>
          </fieldset>
        </div>
        <div class="govuk-warning-text" id="twoHourWarningText" hidden>
          <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
          <strong class="govuk-warning-text__text">
            <span class="govuk-visually-hidden">Warning</span>
              Departure Date & time must be <u>2 hours</u> prior to the aircraftâ€™s expected departure for or from the United Kingdom.
          </strong>
        </div>
        {# End departure time #}

        <div class="{{ m.form_group_class('portChoice', errors) }}">
          <fieldset class="govuk-fieldset" aria-describedby="portChoice-hint">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
              <h2 class="govuk-fieldset__heading">{{__('field_port_choice_departure')}}</h2>
            </legend>
            <span id="portChoice-hint" class="govuk-hint">{{__('field_port_choice_hint')}}</span>
            {{ m.error_message('portChoice', errors, __) }}
            <div class="govuk-radios govuk-radios--conditional" data-module="radios">
              <div class="govuk-radios__item">
                <input id="portChoiceCode" name="portChoice" class="govuk-radios__input"
                  type="radio"
                  value="Yes"
                    {% set IATA_CODE_LENGTH = 3 %}
                    {% set ICAO_CODE_LENGTH = 4 %}
                    {{
                        'checked' if cookie.getGarDepartureVoyage().departurePort === ''
                                    or cookie.getGarDepartureVoyage().departurePort.length === IATA_CODE_LENGTH
                                    or cookie.getGarDepartureVoyage().departurePort.length === ICAO_CODE_LENGTH
                    }}
                  data-aria-controls="portChoiceCodeContainer"
                  aria-labelledby="portChoiceCode-label"
                >
                <label id="portChoiceCode-label" class="govuk-label govuk-radios__label" for="portChoiceCode">{{__('field_choice_yes')}}</label>
              </div>
              <div id="portChoiceCodeContainer" class="govuk-radios__conditional govuk-radios__conditional--hidden">
                <div class="{{ m.form_group_class('departurePort', errors) }}">
                  <label id="departurePort-label" class="govuk-label" for="departurePort">{{__('field_port_code')}}</label>
                  {{ m.hint('departurePort', __('field_port_hint')) }}
                  {{ m.error_message('departurePort', errors, __) }}
                  <select id="departurePort" name="departurePort" class="govuk-select" 
                    value="{{ cookie.getGarDepartureVoyage().departurePort | upper }}"
                    aria-labelledby="departurePort-label"
                    aria-describedby="departurePort-hint{{ ' departurePort-error' if errors | containsError('departurePort') }}">
                    {% for airport in airportList | sort(attribute = 'label') %}
                      <option value="{{ airport.id }}" {{ 'selected=selected' if cookie.getGarDepartureVoyage().departurePort == airport.id }}
                        or
                      <option value="{{ airport.id2 }}" {{ 'selected=selected' if cookie.getGarDepartureVoyage().departurePort == airport.id2 }}>{{ airport.label }}</option>
                    {% endfor %}
                  </select>
                  </div>
                </div>
                <div class="govuk-radios__item">
                  <input id="portChoiceCoordinates" name="portChoice" class="govuk-radios__input"
                  type="radio"
                  value="No"
                  {#
                      Note: Both cookie.getGarDepartureVoyage().departureLat and cookie.getGarDepartureVoyage().departureLong
                      are set to empty string when the 'Yes' radio button is clicked.
                  #}
                  {{
                      'checked' if (cookie.getGarDepartureVoyage().departureLat != undefined or cookie.getGarDepartureVoyage().departureLong != undefined)
                                  and (cookie.getGarDepartureVoyage().departureLat !== '' and cookie.getGarDepartureVoyage().departureLong !== '')
                  }}
                  data-aria-controls="portChoiceCoordinatesContainer"
                  aria-labelledby="portChoiceCoordinates-label"
                >
                  <label id="portChoiceCoordinates-label" class="govuk-label govuk-radios__label" for="portChoiceCoordinates">{{__('field_choice_no')}}</label>
                </div>
                <div id="portChoiceCoordinatesContainer" class="govuk-radios__conditional govuk-radios__conditional--hidden">
                  <div class="govuk-form-group">
                    {{ m.hint('departureCoordinates', __('field_coordinate_hint')) }}
                  </div>
                  {# Start departure coords #}
                  <div class="govuk-form-group {{ m.form_group_class('departureLat', errors) }}">
                    <label class="govuk-label" for="departureLat">
                      {{__('field_latitude')}}
                    </label>
                    <span id="departureLatitude-hint" class="govuk-hint">
                      {{__('field_latitude_hint')}}
                    </span>

                    {{ m.error_message('departureLat', errors, __) }}
                    <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureDegrees"
                name="departureDegrees" type="text" maxLength=3 value="{{ cookie.getGarDepartureVoyage().departureDegrees }}">

                    <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureMinutes"
                name="departureMinutes" type="text" maxLength=2 value="{{ cookie.getGarDepartureVoyage().departureMinutes }}">

                    <input class="govuk-input govuk-date-input__input govuk-input--width-4" id="departureSeconds"
                name="departureSeconds" type="text" maxLength=8 value="{{ cookie.getGarDepartureVoyage().departureSeconds }}">

                    <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureLatDirection"
                name="departureLatDirection" type="text" maxLength=1 value="{{ cookie.getGarDepartureVoyage().departureLatDirection }}" >

                  </div>

                  <div class="govuk-form-group {{ m.form_group_class('departureLong', errors) }}">
                    <label class="govuk-label" for="departureLong">
                      {{__('field_longitude')}}
                    </label>
                    <span id="departureLongitude-hint" class="govuk-hint">
                      {{__('field_longitude_hint')}}
                    </span>
                    {{ m.error_message('departureLong', errors, __) }}
                    <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureLongDegrees"
                name="departureLongDegrees" type="text" maxLength=3 value="{{ cookie.getGarDepartureVoyage().departureLongDegrees }}">

                    <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureLongMinutes"
                name="departureLongMinutes" type="text" maxLength=2 value="{{ cookie.getGarDepartureVoyage().departureLongMinutes }}" >

                    <input class="govuk-input govuk-date-input__input govuk-input--width-4" id="departureLongSeconds"
                name="departureLongSeconds" type="text" maxLength=8 value="{{ cookie.getGarDepartureVoyage().departureLongSeconds }}" >

                    <input class="govuk-input govuk-date-input__input govuk-input--width-2" id="departureLongDirection"
                name="departureLongDirection" type="text" maxLength=1 value="{{ cookie.getGarDepartureVoyage().departureLongDirection }}" >

                  </div>
                  {# End departure coords #}
                </div>
              </div>
              {{ b.coa_designation_regulation_change(true) }}
            </fieldset>
          </div>

          {# Start buttons #}
          {{ m.submit_buttons('GAR Departure', csrfToken, __) }}
        </form>
        {{ m.exit_without_saving(csrfToken, __) }}
        {# End buttons #}
      </div>
    </div>
    <dialog id="confirmWarnedDepartureDialog">
      <p class="govuk-error-message">
        Departure Date & time must be <u>2 hours</u> prior to the aircraftâ€™s expected departure for or from the United Kingdom.
      </p>
      <p>
        sGAR will allow you to submit the GAR, but it is not recommended.
      </p>
      <form method="dialog">
        <button type="submit" class="govuk-button" data-module="govuk-button">
          Close and fix departure date
        </button>
      </form>
      <button id="continueWithWarnedDate" type="button" class="govuk-button govuk-button--secondary" data-module="govuk-button">
        Continue with warned departure date
      </button>
    </dialog>
    <script type="text/javascript" src="/javascripts/accessible-autocomplete.min.js"></script>
    <script type="text/javascript" src="/utils/validator.js"></script>
    <script type="text/javascript">
      const twoHourWarningText = document.getElementById("twoHourWarningText");
      const departureDay = document.getElementById("departureDay");
      const departureMonth = document.getElementById("departureMonth");
      const departureYear = document.getElementById("departureYear");

      const departureHour = document.getElementById("departureHour");
      const departureMinute = document.getElementById("departureMinute");

      const departureDegrees = document.getElementById("departureDegrees");
      const departureMinutes = document.getElementById("departureMinutes");
      const departureSeconds = document.getElementById("departureSeconds");

      const departureLongDegrees = document.getElementById("departureLongDegrees");
      const departureLongMinutes = document.getElementById("departureLongMinutes");
      const departureLongSeconds = document.getElementById("departureLongSeconds");

      const pageForm = document.getElementById('page-form');
      const continueWithWarnedDate = document.getElementById('continueWithWarnedDate');

      function isTwoHoursPriorDeparture() {  
        const TWO_HOURS = 60 * 60 * 1000 * 2;
        const today = new Date()
        const twoHoursPriorDepartureDate = new Date(today.getTime() + TWO_HOURS);

        const departureDate = new Date(
          Number(departureYear.value),
          Number(departureMonth.value) - 1,
          Number(departureDay.value),
          Number(departureHour.value),
          Number(departureMinute.value),
        );

        return twoHoursPriorDepartureDate.getTime() < departureDate.getTime();
      }    

      pageForm.addEventListener("submit", (e) => {
        if (!isTwoHoursPriorDeparture()) {
          e.preventDefault();
          document.getElementById("confirmWarnedDepartureDialog").showModal();
        }
      });

      continueWithWarnedDate.addEventListener("click", (e) => pageForm.submit());

    accessibleAutocomplete.enhanceSelectElement({selectElement: document.querySelector('#departurePort'), minLength: 2});
      document
        .getElementById("departurePort")
        .setAttribute('aria-describedby', 'departurePort-hint{{ ' departurePort-error' if errors | containsError('departurePort') }}');

      departureDay.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue(e.target.value, 'day');
        autoTab(departureDay, 'day', departureMonth);
        twoHourWarningText.hidden = isTwoHoursPriorDeparture();
      });

      departureMonth.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue(e.target.value, 'month');
        autoTab(departureMonth, 'month', departureYear);
        twoHourWarningText.hidden = isTwoHoursPriorDeparture();
      });

      departureYear.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue(e.target.value, 'year')
        twoHourWarningText.hidden = isTwoHoursPriorDeparture();
      });  

      departureHour.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue(e.target.value, 'hour');
        autoTab(departureHour, 'hour', departureMinute);
        twoHourWarningText.hidden = isTwoHoursPriorDeparture();
      });

      departureMinute.addEventListener("keyup", (e) => {
       e.target.value = sanitiseValue(e.target.value, 'minute');
       twoHourWarningText.hidden = isTwoHoursPriorDeparture();
      });

      departureDegrees.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue1(e.target.value, 'degrees');
      });

      departureMinutes.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue2(e.target.value, 'minutes');
        autoTab1(departureMinutes, 'minutes', departureSeconds);
      });

      departureSeconds.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue1(e.target.value, 'seconds');
      });

      departureLongDegrees.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue1(e.target.value, 'degrees');
      });

      departureLongMinutes.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue2(e.target.value, 'minutes');
        autoTab1(departureLongMinutes, 'minutes', departureLongSeconds);
      })
        
      departureLongSeconds.addEventListener("keyup", (e) => {
        e.target.value = sanitiseValue1(e.target.value , 'seconds');
      })  
    </script>

  {% endblock %}