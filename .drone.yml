

---
kind: pipeline
name: build-push-scan
type: kubernetes


platform:
  os: linux
  arch: amd64

steps:
  - name: build
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind:latest
    commands:
      - source ./ops/image_build.sh

  - name: push
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: DEV_EGAR_PUBLIC_SITE_UI_AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: DEV_EGAR_PUBLIC_SITE_UI_AWS_SECRET_ACCESS_KEY
      DOCKER_REGISTRY_URL: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
      REPO: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/egar/public-site-ui
    commands:
      - source ./ops/image_push.sh
    depends_on:
      - build
    when:
      event:
        - push
      branch:
        - main
        - dev

  - name: unit-test
    pull: if-not-exists
    image: node:22-alpine3.21
    commands:
    - export NOTIFY_API_KEY=dummy
    - cd src
    - npm install
    - npm run test-drone

  - name: linting-formatting
    pull: if-not-exists
    image: node:22-alpine3.21
    commands:
    - cd src
    - npm install
    - npm run check

  - name: trivy-scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    failure: ignore
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: egar-public-site-ui:${DRONE_COMMIT}
      IGNORE_UNFIXED: true
    when:
      event:
      - push
    depends_on:
    - build

  - name: sonar-scan
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/sonar-scanner-nodejs:latest
    commands:
    - sonar-scanner -Dproject.settings=./sonar-project.properties
    when:
      event:
        - push
      branch:
        - main
trigger:
  event:
    - push
    - pull_request
  branch:
    - main
    - dev

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind:latest

volumes:
  - name: dockersock
    temp: {}

---
kind: pipeline
name: deploy-to-dev
type: kubernetes
depends_on:
  - build-push-scan

platform:
  os: linux
  arch: amd64

steps:
  - name: deploy-to-dev
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd
    commands:
      - source ./ops/dev_deploy_vars.sh
      - source ./ops/deploy.sh
    environment:
      INGRESS_CLASS: nginx-internal
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: egar-dev
      NODE_ENV: development
      DEV_BASE_URL:
        from_secret: DEV_BASE_URL
      DEV_KUBE_SERVER:
        from_secret: DEV_KUBE_SERVER
      DEV_KUBE_TOKEN:
        from_secret: DEV_KUBE_TOKEN
      DEV_URL_SERVICE:
        from_secret: DEV_URL_SERVICE
trigger:
  event:
    - push
  branch:
    - dev

---
kind: pipeline
name: deploy-to-test
type: kubernetes

platform:
  os: linux
  arch: amd64

steps:
  - name: deploy-to-test
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd
    commands:
      - source ./ops/test_deploy_vars.sh
      - source ./ops/test_deploy.sh
    environment:
      INGRESS_CLASS: nginx-internal
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: egar-test
      NODE_ENV: testing
      TEST_BASE_URL:
        from_secret: TEST_BASE_URL
      TEST_KUBE_SERVER:
        from_secret: TEST_KUBE_SERVER
      TEST_KUBE_TOKEN:
        from_secret: TEST_KUBE_TOKEN
      # DEV_URL_SERVICE:
      #   from_secret: DEV_URL_SERVICE
trigger:
  event:
    - tag
  ref:
    - refs/tags/deploy-test*

---
kind: pipeline
name: deploy-to-sit
type: kubernetes
depends_on:
  - build-push-scan

platform:
  os: linux
  arch: amd64

steps:
  - name: deploy-to-sit
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd
    commands:
      - source ./ops/sit_deploy_vars.sh
      - source ./ops/deploy.sh
    environment:
      INGRESS_CLASS: nginx-internal
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: egar-sit
      NODE_ENV: sit
      SIT_BASE_URL:
        from_secret: SIT_BASE_URL
      SIT_BASE_URL_SERVICE:
        from_secret: SIT_BASE_URL_SERVICE
      SIT_KUBE_SERVER:
        from_secret: SIT_KUBE_SERVER
      SIT_KUBE_TOKEN:
        from_secret: SIT_KUBE_TOKEN
trigger:
  branch:
    - main
  event:
    - push
---

kind: pipeline
name: deploy-to-staging
type: kubernetes

platform:
  os: linux
  arch: amd64

steps:
  - name: deploy-to-staging
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd
    commands:
      - source ./ops/staging_deploy_vars.sh
      - source ./ops/deploy.sh
    environment:
      DOCKER_REGISTRY_URL:
        from_secret: DOCKER_REGISTRY_URL
      INGRESS_CLASS: nginx-external
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: egar-staging
      NODE_ENV: staging
      STAGING_BASE_URL:
        from_secret: STAGING_BASE_URL
      STAGING_BASE_URL_SERVICE:
        from_secret: STAGING_BASE_URL_SERVICE
      STAGING_KUBE_SERVER:
        from_secret: STAGING_KUBE_SERVER
      STAGING_KUBE_TOKEN:
        from_secret: STAGING_KUBE_TOKEN
trigger:
  event:
    - tag
  ref:
    - refs/tags/v*

---
kind: pipeline
name: deploy-to-production
type: kubernetes

platform:
  os: linux
  arch: amd64

steps:
  - name: deploy-to-production
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd
    commands:
      - source ./ops/prod_deploy_vars.sh
      - source ./ops/prod_deploy.sh
    environment:
      DOCKER_REGISTRY_URL:
        from_secret: DOCKER_REGISTRY_URL
      INGRESS_CLASS: nginx-external
      INSECURE_SKIP_TLS_VERIFY: true
      KUBE_NAMESPACE: egar-production
      NODE_ENV: production
      PRODUCTION_BASE_URL_SERVICE:
        from_secret: PRODUCTION_BASE_URL_SERVICE
      PRODUCTION_KUBE_SERVER:
        from_secret: PRODUCTION_KUBE_SERVER
      PRODUCTION_KUBE_TOKEN:
        from_secret: PRODUCTION_KUBE_TOKEN

trigger:
  event:
    - promote
  target:
    - production

