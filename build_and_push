#!/bin/sh

set -o nounset

readonly DESCRIPTION="Builds and pushes public-sit-ui docker image. Used for development." # Planned to be used in the actual application building

readonly UNDEFINED="undefined"

# Both the following versions did not work in the ACP drone's docker image, in the drone pipe line. 
# We have no option but always to run the script from the actual directory.
#readonly THIS_DIR=$(dirname $(readlink -f ${BASH_SOURCE[0]}))
#readonly THIS_DIR=$(cd $(dirname ${BASH_SOURCE[0]}); pwd)
readonly THIS_DIR='.'

if [[ -r ./.idea ]]; then
    source ./.idea
fi

if [[ ! -r $THIS_DIR/common_lib ]]; then
  echo "Faile to access the common library $THIS_DIR/common_lib." >&2
  exit 1
fi
source $THIS_DIR/common_lib

is_var_undefined(){
  local var_name=$1
  local var_val= #"$(eval \${var_name:-\${UNDEFINED}})"
  eval "var_val=\${$var_name:-${UNDEFINED}}"
  [[ "$var_val" == "${UNDEFINED}" ]]
}

# Check  if all the necessary variables defined
cur_var=
proceed=true
for curr_var in DOCKER_USERNAME DOCKER_PASSWORD DOCKER_REGISTRY_URL IMAGE_TAG; do
  if is_var_undefined $curr_var; then
    echo "Variable $curr_var undefined. Please $curr_var with the right value."
    proceed=false
  fi
done 
if [[ "$proceed" = "false" ]]; then
  echo "Not continuing due to earlier errors." >&2
  exit 1
fi

docker_image_full_url="${DOCKER_REGISTRY_URL}/ukhomeofficedigital/egar-public-site-ui"
if docker build \
    -t ${docker_image_full_url}:${IMAGE_TAG} .; then
  # Login to docker 
  if docker login -u="$DOCKER_USERNAME" -p="${DOCKER_PASSWORD}" "${DOCKER_REGISTRY_URL}"; then
    # Push the image
    if ! docker push ${docker_image_full_url}:${IMAGE_TAG}; then
      echo "Failed to push the image to ${DOCKER_REGISTRY_URL}." >&2
      exit 1
    else
      echo "Successfully pushed the image to ${DOCKER_REGISTRY_URL}".
    fi
  else
    echo "Failed to login to ${DOCKER_REGISTRY_URL} with the given credentials." >&2
    exit 1
  fi
else
  echo "Failed to build the docker image." >&2
  exit 1
fi